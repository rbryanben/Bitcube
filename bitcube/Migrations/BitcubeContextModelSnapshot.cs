// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bitcube.Model;

namespace bitcube.Migrations
{
    [DbContext(typeof(BitcubeContext))]
    partial class BitcubeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("bitcube.Model.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("open")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ownerusername")
                        .HasColumnType("TEXT");

                    b.Property<string>("reference")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("ownerusername");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("bitcube.Model.CartProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("cartid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("TEXT");

                    b.Property<int?>("productid")
                        .HasColumnType("INTEGER");

                    b.Property<long>("quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("cartid");

                    b.HasIndex("productid");

                    b.ToTable("cartProducts");
                });

            modelBuilder.Entity("bitcube.Model.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created")
                        .HasColumnType("TEXT");

                    b.Property<string>("createdByusername")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("productId")
                        .HasColumnType("TEXT");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("productPrice")
                        .HasColumnType("REAL");

                    b.Property<long>("quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("createdByusername");

                    b.HasIndex("productId")
                        .IsUnique();

                    b.ToTable("products");
                });

            modelBuilder.Entity("bitcube.Model.User", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.Property<string>("apiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("created")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("username");

                    b.ToTable("users");
                });

            modelBuilder.Entity("bitcube.Model.Cart", b =>
                {
                    b.HasOne("bitcube.Model.User", "owner")
                        .WithMany()
                        .HasForeignKey("ownerusername");

                    b.Navigation("owner");
                });

            modelBuilder.Entity("bitcube.Model.CartProduct", b =>
                {
                    b.HasOne("bitcube.Model.Cart", "cart")
                        .WithMany()
                        .HasForeignKey("cartid");

                    b.HasOne("bitcube.Model.Product", "product")
                        .WithMany()
                        .HasForeignKey("productid");

                    b.Navigation("cart");

                    b.Navigation("product");
                });

            modelBuilder.Entity("bitcube.Model.Product", b =>
                {
                    b.HasOne("bitcube.Model.User", "createdBy")
                        .WithMany()
                        .HasForeignKey("createdByusername");

                    b.Navigation("createdBy");
                });
#pragma warning restore 612, 618
        }
    }
}
